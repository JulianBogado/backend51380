paths:
  /api/products:
    get:
      summary: Obtener todos los productos.
      responses:
        '200':
          description: Lista de productos.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Añadir un nuevo producto.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Producto añadido exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /api/products/{pid}:
    get:
      summary: Obtener un producto por su ID.
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto.
          schema:
            type: string
      responses:
        '200':
          description: Producto encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado.
    put:
      summary: Actualizar un producto.
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Producto actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado.
    delete:
      summary: Eliminar un producto.
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto.
          schema:
            type: string
      responses:
        '200':
          description: Producto eliminado exitosamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  msg:
                    type: string
                    example: "Se eliminó el producto correctamente"
                  payload:
                    type: string
                    example: "Producto eliminado: Producto X"
        '404':
          description: Producto no encontrado.

components:
  schemas:
    Product:
      type: object
      required:
        - title
        - description
        - price
        - thumbnail
        - stock
        - category
        - code
      properties:
        title:
          type: string
          description: Título del producto.
        description:
          type: string
          description: Descripción del producto.
        price:
          type: number
          description: Precio del producto.
        thumbnail:
          type: string
          description: URL de la imagen del producto.
        stock:
          type: integer
          description: Cantidad en stock del producto.
        category:
          type: string
          description: Categoría del producto.
        code:
          type: string
          description: Código único del producto.
        status:
          type: boolean
          description: Estado del producto (activo/inactivo).
